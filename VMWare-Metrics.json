{"version":17,"variables":[],"tiles":{"0":{"type":"code","title":"Hypervisor - CPU Usage","input":"import { metricsClient } from '@dynatrace-sdk/client-classic-environment-v2';\n\nexport default async function () {\n    const metricSelectorString = \"builtin:cloud.vmware.hypervisor.cpu.usage:splitBy(\\\"dt.entity.hypervisor\\\"):sort(value(auto,descending)):limit(20)\";\n    const data = await metricsClient.query({\n        metricSelector: metricSelectorString,\n        acceptType: \"application/json; charset=utf-8\",\n    });\n\n    const result = [];\n    const dataByTimestamp = {};\n\n    data.result.forEach(series => {\n        series.data.forEach(serieData => {\n            const timestamps = serieData.timestamps;\n            const values = serieData.values;\n            const dimensionsKey = serieData.dimensions;\n            timestamps.forEach((timestamp, index) => {\n                const timestampKey = new Date(timestamp).toISOString();\n\n                // Si no existe el timestamp en el objeto, lo inicializamos\n                if (!dataByTimestamp[timestampKey]) {\n                    dataByTimestamp[timestampKey] = { timestamp: timestampKey };\n                }\n\n                // Agregar cada dimensión al objeto correspondiente al timestamp\n                dimensionsKey.forEach((dimension, dimensionIndex) => {\n                    dataByTimestamp[timestampKey][dimension] = values[index];\n                });\n            });\n        });\n    });\n\n    // Convertir el objeto a un array de resultados\n    for (const timestampKey in dataByTimestamp) {\n        result.push(dataByTimestamp[timestampKey]);\n    }\n\n    return result;\n}","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxisLabel":"HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1BF3844F141922","valueAxisLabel":"HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1BF3844F141922","tooltipVariant":"single","categoryAxis":["HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"],"valueAxis":["HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"]},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","fieldMapping":{"timestamp":"timestamp","leftAxisValues":["HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"]},"xAxisLabel":"timestamp","xAxisIsLabelVisible":false,"hiddenLegendFields":["TEST","dimensions","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"],"leftYAxisSettings":{}},"singleValue":{"showLabel":true,"label":"element","prefixIcon":"","recordField":"element","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["totalCount"],["nextPageKey"],["resolution"],["result"]],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"HYPERVISOR-CC1FFC844F136E23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC15FC844F136F23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC18F3844F141922","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1BF3844F141922","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"label":{"showLabel":false},"icon":{"showIcon":false,"icon":""},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":false},"visualization":"lineChart"},"1":{"type":"code","title":"Hypervisor - Memory Usage","input":"import { metricsClient } from '@dynatrace-sdk/client-classic-environment-v2';\n\nexport default async function () {\n    const metricSelectorString = \"builtin:cloud.vmware.hypervisor.mem.consumed:splitBy(\\\"dt.entity.hypervisor\\\"):sort(value(auto,descending)):limit(20)\";\n    const data = await metricsClient.query({\n        metricSelector: metricSelectorString,\n        acceptType: \"application/json; charset=utf-8\",\n    });\n\n    const result = [];\n    const dataByTimestamp = {};\n\n    data.result.forEach(series => {\n        series.data.forEach(serieData => {\n            const timestamps = serieData.timestamps;\n            const values = serieData.values;\n            const dimensionsKey = serieData.dimensions;\n            timestamps.forEach((timestamp, index) => {\n                const timestampKey = new Date(timestamp).toISOString();\n\n                // Si no existe el timestamp en el objeto, lo inicializamos\n                if (!dataByTimestamp[timestampKey]) {\n                    dataByTimestamp[timestampKey] = { timestamp: timestampKey };\n                }\n\n                // Agregar cada dimensión al objeto correspondiente al timestamp\n                dimensionsKey.forEach((dimension, dimensionIndex) => {\n                    dataByTimestamp[timestampKey][dimension] = values[index];\n                });\n            });\n        });\n    });\n\n    // Convertir el objeto a un array de resultados\n    for (const timestampKey in dataByTimestamp) {\n        result.push(dataByTimestamp[timestampKey]);\n    }\n\n    return result;\n}","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxisLabel":"HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC1BF3844F141922,HYPERVISOR-CC18F3844F141922","valueAxisLabel":"HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC1BF3844F141922,HYPERVISOR-CC18F3844F141922","tooltipVariant":"single","categoryAxis":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC18F3844F141922"],"valueAxis":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC18F3844F141922"]},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","fieldMapping":{"timestamp":"timestamp","leftAxisValues":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC18F3844F141922"]},"xAxisLabel":"timestamp","xAxisIsLabelVisible":false,"hiddenLegendFields":["TEST","dimensions","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"],"leftYAxisSettings":{}},"singleValue":{"showLabel":true,"label":"element","prefixIcon":"","recordField":"element","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["totalCount"],["nextPageKey"],["resolution"],["result"]],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"HYPERVISOR-CC15FC844F136F23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1FFC844F136E23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1BF3844F141922","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC18F3844F141922","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"label":{"showLabel":false},"icon":{"showIcon":false,"icon":""},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":false},"visualization":"lineChart"},"2":{"type":"code","title":"Hypervisor - Write IOPS","input":"import { metricsClient } from '@dynatrace-sdk/client-classic-environment-v2';\n\nexport default async function () {\n    const metricSelectorString = \"builtin:cloud.vmware.hypervisor.hostdisk.wIops:splitBy(\\\"dt.entity.hypervisor\\\"):sort(value(auto,descending)):limit(20)\";\n    const data = await metricsClient.query({\n        metricSelector: metricSelectorString,\n        acceptType: \"application/json; charset=utf-8\",\n    });\n\n    const result = [];\n    const dataByTimestamp = {};\n\n    data.result.forEach(series => {\n        series.data.forEach(serieData => {\n            const timestamps = serieData.timestamps;\n            const values = serieData.values;\n            const dimensionsKey = serieData.dimensions;\n            timestamps.forEach((timestamp, index) => {\n                const timestampKey = new Date(timestamp).toISOString();\n\n                // Si no existe el timestamp en el objeto, lo inicializamos\n                if (!dataByTimestamp[timestampKey]) {\n                    dataByTimestamp[timestampKey] = { timestamp: timestampKey };\n                }\n\n                // Agregar cada dimensión al objeto correspondiente al timestamp\n                dimensionsKey.forEach((dimension, dimensionIndex) => {\n                    dataByTimestamp[timestampKey][dimension] = values[index];\n                });\n            });\n        });\n    });\n\n    // Convertir el objeto a un array de resultados\n    for (const timestampKey in dataByTimestamp) {\n        result.push(dataByTimestamp[timestampKey]);\n    }\n\n    return result;\n}","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxisLabel":"HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC1BF3844F141922","valueAxisLabel":"HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1FFC844F136E23,HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC1BF3844F141922","tooltipVariant":"single","categoryAxis":["HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1BF3844F141922"],"valueAxis":["HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1BF3844F141922"]},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","fieldMapping":{"timestamp":"timestamp","leftAxisValues":["HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC1BF3844F141922"]},"xAxisLabel":"timestamp","xAxisIsLabelVisible":false,"hiddenLegendFields":["TEST","dimensions","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"],"leftYAxisSettings":{}},"singleValue":{"showLabel":true,"label":"element","prefixIcon":"","recordField":"element","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["totalCount"],["nextPageKey"],["resolution"],["result"]],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"HYPERVISOR-CC18F3844F141922","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1FFC844F136E23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC15FC844F136F23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1BF3844F141922","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"label":{"showLabel":false},"icon":{"showIcon":false,"icon":""},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":false},"visualization":"lineChart"},"3":{"type":"code","title":"Hypervisor - Reads IOPS","input":"import { metricsClient } from '@dynatrace-sdk/client-classic-environment-v2';\n\nexport default async function () {\n    const metricSelectorString = \"builtin:cloud.vmware.hypervisor.hostdisk.rIops:splitBy(\\\"dt.entity.hypervisor\\\"):sort(value(auto,descending)):limit(20)\";\n    const data = await metricsClient.query({\n        metricSelector: metricSelectorString,\n        acceptType: \"application/json; charset=utf-8\",\n    });\n\n    const result = [];\n    const dataByTimestamp = {};\n\n    data.result.forEach(series => {\n        series.data.forEach(serieData => {\n            const timestamps = serieData.timestamps;\n            const values = serieData.values;\n            const dimensionsKey = serieData.dimensions;\n            timestamps.forEach((timestamp, index) => {\n                const timestampKey = new Date(timestamp).toISOString();\n\n                // Si no existe el timestamp en el objeto, lo inicializamos\n                if (!dataByTimestamp[timestampKey]) {\n                    dataByTimestamp[timestampKey] = { timestamp: timestampKey };\n                }\n\n                // Agregar cada dimensión al objeto correspondiente al timestamp\n                dimensionsKey.forEach((dimension, dimensionIndex) => {\n                    dataByTimestamp[timestampKey][dimension] = values[index];\n                });\n            });\n        });\n    });\n\n    // Convertir el objeto a un array de resultados\n    for (const timestampKey in dataByTimestamp) {\n        result.push(dataByTimestamp[timestampKey]);\n    }\n\n    return result;\n}","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxisLabel":"HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1BF3844F141922,HYPERVISOR-CC1FFC844F136E23","valueAxisLabel":"HYPERVISOR-CC15FC844F136F23,HYPERVISOR-CC18F3844F141922,HYPERVISOR-CC1BF3844F141922,HYPERVISOR-CC1FFC844F136E23","tooltipVariant":"single","categoryAxis":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC1FFC844F136E23"],"valueAxis":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC1FFC844F136E23"]},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","fieldMapping":{"timestamp":"timestamp","leftAxisValues":["HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922","HYPERVISOR-CC1FFC844F136E23"]},"xAxisLabel":"timestamp","xAxisIsLabelVisible":false,"hiddenLegendFields":["TEST","dimensions","HYPERVISOR-CC1FFC844F136E23","HYPERVISOR-CC15FC844F136F23","HYPERVISOR-CC18F3844F141922","HYPERVISOR-CC1BF3844F141922"],"leftYAxisSettings":{}},"singleValue":{"showLabel":true,"label":"element","prefixIcon":"","recordField":"element","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["totalCount"],["nextPageKey"],["resolution"],["result"]],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"HYPERVISOR-CC15FC844F136F23","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC18F3844F141922","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1BF3844F141922","rangeAxis":""},{"valueAxis":"HYPERVISOR-CC1FFC844F136E23","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"label":{"showLabel":false},"icon":{"showIcon":false,"icon":""},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":false},"visualization":"lineChart"}},"layouts":{"0":{"x":0,"y":0,"w":23,"h":8},"1":{"x":0,"y":8,"w":23,"h":8},"2":{"x":0,"y":16,"w":23,"h":8},"3":{"x":0,"y":24,"w":23,"h":8}},"importedWithCode":false,"settings":{}}
